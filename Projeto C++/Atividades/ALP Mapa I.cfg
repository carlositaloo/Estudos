Algoritmo Mapa ALP I
    Tipo
        regCel = registro
        codigo : inteiro
        num : inteiro
        nome : vetor [1..30] de caractere
        valor : real
    Fim_registro

    Procedimento mostrarMenu()
    Inicio
        limpatela	// Caso haja!
        escreval ("|--->      Menu Digite um comando para acessa-lo:      <---|")
        escreval ("|----------------------------------------------------------|")
        escreval ("| 1.Cadastro    -    para Cadastrar um novo celular.       |")
        escreval ("| 2.Lista       -    para Listar todos os celulares.       |")
        escreval ("| 3.Pesquisa    -    para Pesquisar um celular específico. |")
        escreval ("| 0.Sair        -    para Sair do programa.                |")
        escreval ("|----------------------------------------------------------|")
        escreval (" ")
        escreva ("Opção: ")
        leia (menu)
    Fim_procedimento

    Procedimento mostrarCadastro()
    Inicio
        repeticao <- "S"
        Enquanto ((contador <= 100) e ((repeticao = "S") ou (repeticao = "s"))) faça
            produto[contador].codigo <- contador
            escreva ("#", produto[contador].codigo, "  Digite o numero do celular: ")
            leia (produto[contador].num)
            escreva ("#", produto[contador].codigo, "  Digite o nome do produto: ")
            leia (produto[contador].nome)
            escreva ("#", produto[contador].codigo, "  Digite o valor do produto: ")
            escreva ("R$")
            leia (produto[contador].valor)
            escreval (" ")
                Se (produto[contador].codigo <= 100) então
                    escreval ("Produto cadastrado!")
                    escreval ("cadastrar mais um produto? (S/n)")
                    leia (repeticao)
                    contador <- contador + 1
                Fim_se
        Fim_enquanto
		Se (contador > 100) entao
            escreval ("Voce digitou o maximo de produtos(100).")
            escreval ("Aperte ENTER para voltar ao menu!")
            leia (repeticao)
        Fim_se		
    Fim_procedimento

    Procedimento mostrarLista()
    Var
        numCont : inteiro
    Inicio
        repeticao <- "xyz"
        contador <- contador - 1
        Enquanto (repeticao = "xyz") faça
            escreval ("Lista de todos os produtos registrados no sistema:")
            escreval (" ")
            escreval (" ")
            escreval ("#Numero    |Código         |Nome                  |Valor")
                Para numCont de 1 ate contador passo 1 faça
                escreval ("#", produto[numCont].codigo, "    ", produto[numCont].num, "   ", produto[numCont].nome, "     R$", produto[numCont].valor)
                Fim_para
            escreval (" ")
            escreval ("Precione Enter para voltar ao menu.")
            leia (repeticao)
        Fim_enquanto
        contador <- contador + 1
    Fim_procedimento

    Procedimento mostrarPesquisa()
    Var
        pesquisa : inteiro
    Inicio
        repeticao <- "S"
        Enquanto ((repeticao = "S") ou (repeticao = "s")) faça 
        escreval ("Listar produto específico:")
        escreval (" ")
        escreva ("Digite o código do produto: (Código de 1 a 100): ")
        leia (pesquisa)
            se (produto[pesquisa].codigo = 0) então
		// O CORRETO SERIA:
		//  se ((produto[pesquisa].codigo = NULL) ou ((pesquisa = 0) ou (pesquisa > 100))) então
		// MAS NAO ACHEI COMO DEFINE UMA VARIAVEL VAZIA NO PORTUGOL EX: NULL.
                escreval ("       ## ERRO ## ")
                escreval (" Produto não cadastrado!")
                escreval (" ")
                escreval ("Deseja pesquisar outro produto? (S/n)")
                leia (repeticao)
            senão
                escreval ("#Numero    |Código         |Nome                  |Valor")
                escreval ("#", produto[pesquisa].codigo, "    ", produto[pesquisa].num, "   ", produto[pesquisa].nome, "     R$", produto[pesquisa].valor)
                escreval ("Deseja pesquisar outro produto? (S/n)")
                leia (repeticao)
            Fim_se
        Fim_enquanto
    Fim_procedimento

    Var
        produto : vetor[1..100] de regCel
        menu : vetor[1..10] de caractere
        contador : inteiro
        inicioMenu, repeticao : caractere        
    
    Inicio
        contador <- 1
        inicioMenu <- "N"
        Enquanto ((inicioMenu = "N") ou (inicioMenu = "n")) faça
            mostrarMenu()

            Se ((menu = "1") ou (menu = "cadastro")) então
            mostrarCadastro()
            Fim_se

            Se ((menu = "2") ou (menu = "lista")) então
            mostrarLista()
            Fim_se

            Se ((menu = "3") ou (menu = "pesquisa")) então
            mostrarPesquisa()
            Fim_se

            Se ((menu = "0") ou (menu = "sair") ou (menu = "quit")) então
                escreval ("Deseja realmente sair? (S/n)")
                leia (inicioMenu)
            Fim_se
        Fim_enquanto
        escreval ("Fenalizando...")
Fim
