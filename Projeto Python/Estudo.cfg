# Módulos e Bibliotecas
    import nome_do_módulo                         # Importa um módulo
    from nome_do_módulo import nome_da_função     # Importa uma função específica de um módulo

# Estruturas de Dados
    Listas                     # Coleção ordenada e mutável
    Tuplas                     # Coleção ordenada e imutável
    Dicionários                # Coleção não ordenada, mutável e indexada
    Conjuntos                  # Coleção não ordenada de elementos únicos

# Operadores Aritméticos
    +                          # Adição
    -                          # Subtração
    *                          # Multiplicação
    /                          # Divisão
    //                         # Divisão inteira (descarta a parte fracionária)
    %                          # Módulo (resto da divisão)
    **                         # Potenciação

# Ordem de Precedência
    1º ()                      # Primario.
    2º **                      # Potência (2²).
    3º *, /, //, %             # Multiplicação, Divisão, Divisão inteira, Resto da divisão.
    4º +, -                    # Soma, Subtração.

# Operado Logico:
    and                        # E
    or                         # OU
    not                        # Não
    is                         # Ser ou Está
    in                         # Dentro
    not in                     # Não está dentro

# .format()
    {:20}                      # 20 caracteres.
    {:>20}                     # Alinhado a direita.
    {:<20}                     # Alinhado a esquerda.
    {:^20}                     # Centralizado.
    {:20.2f}                   # 20 caracteres com 2 casas decimais.
    {:.2f}                     # Casas decimais.
    {:2}                       # Deixa espaço pra 2 caracteres.
    {:=^20}                    # Centralização de espaço com '='.
    ('-' * 20)                 # Faz 20 '-'

# Operadores Lógicos
    >                          # Maior que
    <                          # Menor que
    >=                         # Maior ou igual a
    <=                         # Menor ou igual a
    ==                         # Igual a
    !=                         # Diferente de

# Estruturas Condicionais
    if condição:
        # Se a condição for verdadeira, execute este bloco de código
    elif outra_condição:
        # Se a primeira condição não for verdadeira, mas esta for, execute este bloco de código
    else:
        # Se nenhuma das condições anteriores for verdadeira, execute este bloco de código


# Loops
    for item in lista:        # Iteração em uma lista
        # Faça algo com 'item'
        
    while condição:           # Executa enquanto a condição for verdadeira
        # Faça algo enquanto a condição for verdadeira

# Funções
    def nome_da_função():     # Definição de uma função
        # Corpo da função
        return valor            # Retorna um valor

# Manipulando Texto

# Acessando caracteres:
    'frase'[X]                # Retorna o caractere na posição X da string 'frase'
    'frase'[X:Y]              # Retorna a substring que vai da posição X até Y-1 da string 'frase'
    'frase'[X:Y:Z]            # Retorna a substring que vai da posição X até Y-1, pulando Z caracteres

# Alinhamento e formatação:
    .ljust()                  # Alinha a string à esquerda
    .center(20)               # Centraliza a string em um espaço de 20 caracteres
    .rjust()                  # Alinha a string à direita

# Informações sobre a string:
    .len()                    # Retorna o comprimento da string
    .count('X')               # Retorna o número de ocorrências do caractere 'X' na string
    .find()                   # Retorna a posição da primeira ocorrência de uma substring na string
    '' in frase               # Verifica se uma string vazia está presente na variável 'frase'
    variable.index('Nome')    # Retorna a posição da primeira ocorrência da palavra 'Nome' na variável 'variable'

# Transformação de string:
    .replace('X', 'Y')        # Substitui todas as ocorrências da string 'X' pela string 'Y'
    .upper()                  # Converte a string para letras maiúsculas
    .lower()                  # Converte a string para letras minúsculas
    .capitalize()             # Converte o primeiro caractere da string para maiúsculo
    .title()                  # Converte o primeiro caractere de cada palavra da string para maiúsculo
    .strip()                  # Remove espaços em branco do início e do final da string
    ''.join()                 # Concatena os elementos de uma lista de strings em uma única string
    .split()                  # Divide a string em uma lista de substrings onde houver espaços
    .split('X')               # Divide a string em uma lista de substrings onde houver o caractere 'X'

# Métodos Úteis de String:
    .startswith('prefixo')    # Verifica se a string começa com o prefixo 'prefixo'
    .endswith('sufixo')       # Verifica se a string termina com o sufixo 'sufixo'
    .split('separador')       # Divide a string em uma lista de substrings usando 'separador' como delimitador
    .join(lista)              # Junta os elementos de uma lista de strings em uma única string, usando a string original como separador
    .isdigit()                # Verifica se a string contém apenas dígitos
    .isalpha()                # Verifica se a string contém apenas letras
    .isalnum()                # Verifica se a string contém apenas letras ou dígitos
    .isspace()                # Verifica se a string contém apenas espaços em branco

# Tratamento de Exceções
    try:
        # Tentativa de execução de código
    except Exceção as e:
        # Código a ser executado caso ocorra a exceção 'Exceção'
        # 'e' contém informações sobre a exceção

# Comentários
    # Comentário de uma linha

    """
    Comentário de múltiplas linhas
    Também conhecido como docstring
    Pode ser usado para documentar funções, classes, módulos, etc.
    """
